swagger: '2.0'
info:
  description: API开发指南说明
  version: '1.0'
  title: SpringMVC Example API
  termsOfService: 'http://www.maxhub.vip'
  contact:
    name: Leo King
    url: 'http://www.leking.me'
    email: jinlei3505@cvte.com
  license:
    name: MIT
    url: 'https://github.com/lordking/spring-rest-sample/LICENSE'
host: 'localhost:8080'
basePath: /sample
tags:
  - name: blog
    description: 日志处理
paths:
  /api/blogs:
    get:
      tags:
        - blog
      summary: 查询所有的日志
      operationId: findAllUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 正确回复
          schema:
            type: array
            items:
              $ref: '#/definitions/Blog'
        '400':
          description: 错误回复。大于等于400以上的所有Body错误格式都如下格式。
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - blog
      summary: 创建日志
      operationId: createUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: form
          description: form
          required: true
          schema:
            $ref: '#/definitions/BlogForm'
      responses:
        '200':
          description: 正确回复
          schema:
            $ref: '#/definitions/PrevalentMessage'
        '400':
          description: 错误回复。大于等于400以上的所有Body错误格式都如下格式。
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/api/blogs/{id}':
    delete:
      tags:
        - blog
      summary: 删除日志
      operationId: deleteUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: 正确回复
          schema:
            $ref: '#/definitions/PrevalentMessage'
        '400':
          description: 错误回复。大于等于400以上的所有Body错误格式都如下格式。
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - blog
      summary: 查询单个日志
      operationId: findOneByIdUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Blog'
        '400':
          description: 错误回复。大于等于400以上的所有Body错误格式都如下格式。
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - blog
      summary: 更新单个日志
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: form
          description: form
          required: true
          schema:
            $ref: '#/definitions/BlogForm'
      responses:
        '200':
          description: 正确回复
          schema:
            $ref: '#/definitions/PrevalentMessage'
        '400':
          description: 错误回复。大于等于400以上的所有Body错误格式都如下格式。
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  PrevalentMessage:
    type: object
    properties:
      message:
        type: string
        description: 正确返回的普通说明。一般填写ok
  ErrorResponse:
    type: object
    properties:
      code:
        type: integer
        description: 错误代码
      message:
        type: string
        description: 错误说明
  BlogForm:
    type: object
    properties:
      content:
        type: string
      subject:
        type: string
  Blog:
    type: object
    properties:
      _id:
        type: string
        format: int64
        description: 唯一标识
      subject:
        type: string
        description: 标题
      content:
        type: string
        description: 内容
      createdDate:
        type: string
        format: date-time
        description: 创建时间
      updatedDate:
        type: string
        format: date-time
        description: 更新时间
